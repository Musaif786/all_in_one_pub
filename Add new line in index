# List of indexes to search for
indexes = ['Index1', 'Index2', 'Index3', 'Index4', 'Index5']

# Word to add after the 'Frozen' line
word_to_add = "NewWord"

# Input file path (same file will be modified)
file_path = 'index.conf'

def add_word_after_frozen(file_path, indexes, word_to_add):
    with open(file_path, 'r') as file:
        lines = file.readlines()

    new_lines = []
    i = 0
    while i < len(lines):
        line = lines[i]
        new_lines.append(line)
        
        # Check if this line contains any of the indexes
        if any(f'[{index}]' in line for index in indexes):
            # Look for 'Frozen' in the following lines for the current index
            while i < len(lines):
                i += 1
                new_lines.append(lines[i])
                if 'Frozen' in lines[i]:
                    # Add the new word on the next line after 'Frozen'
                    new_lines.append(word_to_add + '\n')
                    break

        i += 1

    # Write the updated content back to the file
    with open(file_path, 'w') as file:
        file.writelines(new_lines)

if __name__ == "__main__":
    add_word_after_frozen(file_path, indexes, word_to_add)








Ansible back-up 


---
# tasks/splunk_kvstore_backup.yml

- name: Take full Splunk KV store backup using dzdo
  become: yes
  become_method: dzdo
  become_user: root
  shell: |
    su - splunk -c '/opt/splunk/bin/splunk backup kvstore'
  args:
    creates: /opt/splunk/var/lib/splunk/kvstorebackup
  register: kvstore_backup_result
  changed_when: "'Backup completed successfully' in kvstore_backup_result.stdout"
  tags: 
    - kvstore-backup





-------------- 

Prompt






---
# tasks/splunk_kvstore_backup.yml

- name: Take full Splunk KV store backup using dzdo and handle yes/no prompts
  become: yes
  become_method: dzdo
  become_user: root
  expect:
    command: su - splunk -c '/opt/splunk/bin/splunk backup kvstore'
    responses:
      'Do you want to continue?': 'yes\n'
      'Are you sure you want to proceed?': 'yes\n'
  args:
    creates: /opt/splunk/var/lib/splunk/kvstorebackup
  register: kvstore_backup_result
  changed_when: "'Backup completed successfully' in kvstore_backup_result.stdout"
  tags: 
    - kvstore-backup

---------------------
